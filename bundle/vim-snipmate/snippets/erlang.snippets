# module and export all
snippet mod
	-module(${1:`Filename('', 'my')`}).

	-export([${2:function}/${3:arity}]).
snippet modb
	-module(${1:`Filename('', 'my')`}).

	-behavior(${2}).

	-export([${3:function}/${4:arity}]).
snippet module
	-module(${1:`Filename('', 'my')`}).

	-compile([export_all]).

	start() ->
		${2}

	stop() ->
		ok.
# define directive
snippet def
	-define(${1:macro}, ${2:body}).${3}
# export directive
snippet exp
	-export([${1:function}/${2:arity}]).
# include directive
snippet inc
	-include("${1:file}").${2}
# behavior directive
snippet beh
	-behaviour(${1:behaviour}).${2}
# if expression
snippet if
	if
		${1:guard} ->
			${2:body};
	end${3:.}
# case expression
snippet case
	case ${1:expression} of
		${2:pattern} ->
			${3:body};
	end${4:.}
# record directive
snippet rd
	-record(${1:state}, {${2}}).${3}
snippet rec
	-record(${1:record}, {
					${2:field}=${3:value}
					}).${4}
snippet fun
	fun(${1}) -> ${2} end${3:,}
snippet func
	fun(${1}) ->
		${2}
	end${3:,}
snippet try
	try
		${1}
	catch
		${2}
	end${3:.}
snippet rcv
	receive
		${2}
	end${3:.}
snippet rcvf
	receive
		${2}
	after
		${3}
	end${4:.}
